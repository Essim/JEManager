import java.util.Arrays;
import java.util.List;

import biz.Dto;
import biz.Event;
import biz.Participation;
import mockObjects.MockParticipation;
import persistence.dao.ParticipationDao;

public class MockParticipationDao implements ParticipationDao, Validator {

  private boolean getCurrentParticipationsExpected, getCurrentParticipationsReceived,
      countParticipationsExpected, countParticipationsReceived, getParticipationForStateExpected,
      getParticipationForStateReceived;

  public MockParticipationDao(boolean getCurrentParticipationsExpected,
      boolean countParticipationsExpected, boolean getParticipationForStateExpected) {
    this.getCurrentParticipationsExpected = getCurrentParticipationsExpected;
    this.countParticipationsExpected = countParticipationsExpected;
    this.getParticipationForStateExpected = getParticipationForStateExpected;
  }

  @Override
  public int update(Dto dto) {
    // TODO Auto-generated method stub
    return 0;
  }

  @Override
  public int insert(Dto dto) {
    // TODO Auto-generated method stub
    return 0;
  }

  @Override
  public int delete(Dto dto) {
    // TODO Auto-generated method stub
    return 0;
  }

  @Override
  public boolean validate() {
    return getCurrentParticipationsExpected == getCurrentParticipationsReceived
        && countParticipationsExpected == countParticipationsReceived
        && getParticipationForStateReceived == getParticipationForStateExpected;
  }

  @Override
  public List<Participation> getCurrentParticipations() {
    getCurrentParticipationsReceived = true;
    return Arrays.asList(new MockParticipation());
  }

  @Override
  public int countParticipations(Event event, String type) {
    countParticipationsReceived = true;
    return 0;
  }

  @Override
  public List<Participation> getParticipationForState(Event event, String type) {
    getParticipationForStateReceived = true;
    return Arrays.asList(new MockParticipation());
  }

}
