package mockObjects;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;

import biz.Company;
import biz.Contact;
import biz.Dto;
import biz.Event;
import persistence.dao.EventDao;

public class MockEventDao implements EventDao, Validator {

  private boolean getMyParticipantsExpected, getMyParticipantsReceived, getCurrentEventExpected,
      getCurrentEventReceived, selectAllExpected, selectAllReceived, getParticipationDatasExpected,
      getParticipationDatasReceived, findEventByIdExpected, findEventByIdReceived;

  public MockEventDao(boolean getMyParticipantsExpected, boolean getCurrentEventExpected,
      boolean selectAllExpected, boolean getParticipationDatasExpected,
      boolean findEventByIdExpected) {
    this.getMyParticipantsExpected = getMyParticipantsExpected;
    this.getCurrentEventExpected = getCurrentEventExpected;
    this.selectAllExpected = selectAllExpected;
    this.getParticipationDatasExpected = getParticipationDatasExpected;
    this.findEventByIdExpected = findEventByIdExpected;
  }

  @Override
  public int update(Dto dto) {
    // TODO Auto-generated method stub
    return 0;
  }

  @Override
  public int insert(Dto dto) {
    // TODO Auto-generated method stub
    return 0;
  }

  @Override
  public int delete(Dto dto) {
    // TODO Auto-generated method stub
    return 0;
  }

  @Override
  public HashMap<Company, ArrayList<Contact>> getMyParticipants(int eventId) {
    getMyParticipantsReceived = true;
    return new HashMap<Company, ArrayList<Contact>>();
  }

  @Override
  public HashMap<Company, ArrayList<Contact>> getParticipationDatas(int participationId) {
    getParticipationDatasReceived = true;
    return new HashMap<Company, ArrayList<Contact>>();
  }

  @Override
  public Event getCurrentEvent() {
    getCurrentEventReceived = true;
    return new MockEvent();
  }

  @Override
  public List<Event> selectAll() {
    selectAllReceived = true;
    return Arrays.asList(new MockEvent());
  }

  @Override
  public Event findEventById(int idEvent) {
    findEventByIdReceived = true;
    return new MockEvent();
  }

  @Override
  public boolean validate() {
    return getMyParticipantsExpected == getMyParticipantsReceived
        && getCurrentEventReceived == getCurrentEventExpected
        && selectAllReceived == selectAllExpected
        && getParticipationDatasReceived == getParticipationDatasExpected
        && findEventByIdReceived == findEventByIdExpected;
  }

}
